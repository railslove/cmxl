# NEXT release

# 2.2
- `[ENHANCEMENT]` enable `strip_headers` option per default.
- `[BUGFIX]` fix `strip_header` remove greedy regex logic

# 2.1
- `[REFACTOR]` improve file parser to work with windows line breaks and any known header formats
- `[BUGFIX]` fix `strip_header` making it work on statements without headers
- `[HOUSEKEEPING]` use `main` instead of `master` as default branch
- `[ENHANCEMENT]` add support for ruby `3.4`

# 2.0
- `[REFACTOR]` **DEPRECATED:** `storno?` and related methods `storno_credit`, `storno_debit`. Use `reversal?` and related methods `reversal_credit?`, `reversal_debit?` instead
- `[BUGFIX]` **DEPRECATED:** `funds_code` method returns the `credit_debit_indicator` from the SWIFT definition. Therefore the method is deprecated in favor of `credit_debit_indicator` method
- `[HOUSEKEEPING]` [Replace Travis CI with github actions](https://github.com/railslove/cmxl/pull/57)

# 1.5.0

- `[BUGFIX]` fix potential bug when generation_date is not provided in field 20 and 13 (issue: [#35](https://github.com/railslove/cmxl/issues/35) PR: [#36](https://github.com/railslove/cmxl/pull/36))
- `[FEATURE]` add transaction type 'S' to Field 61 (swift_code) (issue: [#38](https://github.com/railslove/cmxl/issues/38) PR: [#42](https://github.com/railslove/cmxl/pull/42)
- `[ENHANCEMENT]` [Fix deprecations in ruby 2.7 for kw params](https://github.com/railslove/cmxl/commit/905cd50e5372da312a653c89e77727a14751b5ec)

# 1.4.6

- `[ENHANCEMENT]` make sure that tag, gemversion and readme align ʘ‿ʘ

# 1.4.5

- `[ENHANCEMENT]` renames transaction_id to primanota

# 1.4.4

- `[FEATURE]` adds transaction id parsing to statement details

# 1.4.3

- `[BUGFIX]` parse field identifier only at the beginning of lines

# 1.4.2

- `[ENHANCEMENT]` handles broken account data without blowing up

# 1.4.1

- `[BUGFIX]` changes entry date calculation for transaction
  Thanks to [@grncdr](https://github.com/grncdr)

# 1.4.0

- `[FEATURE]` adds ability to parse non-numerical tags ([#23](https://github.com/railslove/cmxl/issues/23)) \
  Thanks to [@prometh07](https://github.com/prometh07)

# 1.3.0

- `[FEATURE]` adds MT942 compatibility

# 1.2.0

- `[FEATURE]` strips mt940 header if configured ([#9](https://github.com/railslove/cmxl/issues/9))
  ```ruby
    Cmxl.config[:strip_headers] = true
  ```

# 1.1.1

- `[BUGFIX]` prevents short bank references from swallowing supplementary details delimiter

# 1.1.0

- `[FEATURE]` adds support for supplementary details in transactions (Field 61, Subfield 9) ([#18](https://github.com/railslove/cmxl/issues/18))

# 1.0.0

- `[FEATURE]` adds support for storno transactions ([#14](https://github.com/railslove/cmxl/issues/14))
- `[NOTE]` full backwards compatibility
- `[NOTE]` same as release 0.2.2, fixing versioning

# 0.2.1

- addressing an bug that occoured for transactions submitted end of
  but were fetched in the new year -> those ended up with the wrong year
  on the entry date
- MT942 support for field 13

# 0.2.0

- added several balance related accessors ([#7](https://github.com/railslove/cmxl/issues/7))
- configuration option for `statement separator` ([#5](https://github.com/railslove/cmxl/issues/5))
- improvement for general compatibility

# 0.1.3

- `[BUGFIX]` fixed the statement details parser. It failed in case of empty values in the SEPA details

# 0.1.2

- `[BUGFIX]` fixed the statement details parser. It failed in case of empty values in the sub fields
